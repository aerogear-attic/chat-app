
---

apiVersion: v1
kind: Template
labels:
  template: aerogear-chatapp
metadata:
  name: aerogear-chatapp
  annotations:
    openshift.io/display-name: Aerogear Chat App
    description: |-
        Deplots the Aerogear Chat App Server and Client
    tags: mobile, nodejs
    iconClass: icon-nodejs
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/documentation-url: https://docs.aerogear.org/aerogear/latest/data-sync.html#sync-server-openshift
    openshift.io/support-url: https://access.redhat.com
    template.openshift.io/bindable: 'false'
objects:

- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-database_name: "{.data['database-name']}"
      template.openshift.io/expose-password: "{.data['database-password']}"
      template.openshift.io/expose-username: "{.data['database-user']}"
    name: postgresql-credentials
  stringData:
    database-name: "${POSTGRESQL_DATABASE}"
    database-password: "${POSTGRESQL_PASSWORD}"
    database-user: "${POSTGRESQL_USER}"


- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    name: postgresql
  spec:
    ports:
    - name: postgresql
      nodePort: 0
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: postgresql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${VOLUME_CAPACITY}"

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    name: postgresql
  spec:
    replicas: 1
    selector:
      name: postgresql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: postgresql
      spec:
        containers:
        - capabilities: {}
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql-credentials
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql-credentials
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql-credentials
          image: " "
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - "/usr/libexec/check-container"
              - "--live"
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - "/usr/libexec/check-container"
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: "/dev/termination-log"
          volumeMounts:
          - mountPath: "/var/lib/pgsql/data"
            name: "postgresql-data"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: "postgresql-data"
          persistentVolumeClaim:
            claimName: postgresql
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:${POSTGRESQL_VERSION}
          namespace: openshift
        lastTriggeredImage: ''
      type: ImageChange
    - type: ConfigChange
  status: {}

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: chatapp-server
  spec:
    tags:
    - from:
        kind: DockerImage
        name: aerogear/chatapp-server
      name: latest
      importPolicy:
        scheduled: true

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: chatapp-client
  spec:
    tags:
    - from:
        kind: DockerImage
        name: aerogear/chatapp-client
      name: latest
      importPolicy:
        scheduled: true
    
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: chatapp-server
  spec:
    replicas: 1
    selector:
      deploymentconfig: chatapp-server
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          deploymentconfig: chatapp-server
      spec:
        containers:
        - name: chatapp-server
          image: chatapp-server:latest
          imagePullPolicy: Always
          env:
            - name: DB_HOST
              value: postgresql
            - name: MQTT_HOST
              value: mosquitto-mqtt-broker
          ports:
          - containerPort: 4000
            protocol: TCP
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - chatapp-server
        from:
          kind: ImageStreamTag
          name: chatapp-server:latest
      type: ImageChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: chatapp-client
  spec:
    replicas: 1
    selector:
      deploymentconfig: chatapp-client
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          deploymentconfig: chatapp-client
      spec:
        containers:
        - name: chatapp-client
          imagePullPolicy: Always
          image: chatapp-client:latest
          ports:
          - containerPort: 8080
            protocol: TCP
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - chatapp-client
        from:
          kind: ImageStreamTag
          name: chatapp-client:latest
      type: ImageChange

- apiVersion: v1
  kind: Service
  metadata:
    name: chatapp-server
  spec:
    ports:
    - name: 4000-tcp
      port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      deploymentconfig: chatapp-server
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    name: chatapp-client
  spec:
    ports:
    - name: 4000-tcp
      port: 4000
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: chatapp-client
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: aerogear-chatapp
    name: chatapp-server
  spec:
    host: ""
    to:
      kind: Service
      name: chatapp-server
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Allow

- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: aerogear-chatapp
    name: chatapp-client
  spec:
    host: ""
    to:
      kind: Service
      name: chatapp-client
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Allow

- kind: DeploymentConfig
  apiVersion: v1
  name: mosquitto-mqtt-broker
  metadata:
    name: mosquitto-mqtt-broker
  spec:
    replicas: 1
    selector:
      deploymentconfig: mosquitto-mqtt-broker
    strategy:
      resources: {}
    template:
      metadata:
        labels:
          deploymentconfig: mosquitto-mqtt-broker
      spec:
        containers:
          - name: mosquitto-mqtt-broker
            image: eclipse-mosquitto:latest
            ports:
              - containerPort: 1883
                protocol: TCP
    strategy: 
      type: Rolling
    revisionHistoryLimit: 2 
    minReadySeconds: 0

- apiVersion: v1
  kind: Service
  metadata:
    name: mosquitto-mqtt-broker
  spec:
    ports:
    - name: 1883-tcp
      port: 1883
      protocol: TCP
      targetPort: 1883
    selector:
      deploymentconfig: mosquitto-mqtt-broker
  status:
    loadBalancer: {}

parameters:

- description: Username for PostgreSQL user that will be used for accessing the database.
  displayName: PostgreSQL Connection Username
  name: POSTGRESQL_USER
  value: testuser
  
- description: Password for the PostgreSQL connection user.
  displayName: PostgreSQL Connection Password
  name: POSTGRESQL_PASSWORD
  value: testpassword

- description: Name of the PostgreSQL database accessed.
  displayName: PostgreSQL Database Name
  name: POSTGRESQL_DATABASE
  value: whatsapp

- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  value: 1Gi

- description: Version of PostgreSQL image to be used (10 or latest).
  displayName: Version of PostgreSQL Image
  name: POSTGRESQL_VERSION
  value: '10'
